   WEEKLY INVITE, SEE ANIMA BOOTSTRAP WIKI:
   [1]https://trac.tools.ietf.org/wg/anima/trac/wiki/Bootstrap  draft is
   always at:
   [2]https://tools.ietf.org/html/draft-ietf-anima-bootstrapping-keyinfra-
   04
   NOTE NOTE NOTE:
   Current and most recent meeting notes are added to the BOTTOM of this
   document.
   The reason for this is so that we can consistently refer to line number
   and have them stay (mostly) the same as we add newlines. If Etherpad
   offered a feature for numbering from the bottom we could dispense with
   the pain of scrolling to the bottom of the document but:

       PLEASE SCROLL TO THE BOTTOM OF THIS DOCUMENT TO START/ENGAGE IN THE
   CURRENT MEETING
       PLEASE SCROLL TO THE BOTTOM OF THIS DOCUMENT TO START/ENGAGE IN THE
   CURRENT MEETING
       PLEASE SCROLL TO THE BOTTOM OF THIS DOCUMENT TO START/ENGAGE IN THE
   CURRENT MEETING
   2016-11-22:

   1) recap of
   IETF97.
   Summary: need to show progress w/ an implementation. A bake-off for
   Chicago?
   2) some discussion about minor restructing of
   document
   Address the "option overload" problem by moving anything that isn't
   strictly part of the anima use case into an appendix.
   The primary goal would be to hit the use case:
     *     Pledge<->Proxy<->Registrar

   (this is both the anima use case as well as a primary constrained
   device / IoT use case so we focus on it).
   The use cases of Pledge<->Cloud Proxy etc go into the appendix.
   Clarify that these are included and discussed to ensure that the
   security considerations are complete as additional bootstrapping
   methods can lead to unintended "downgrade" attacks. New bootrapping
   methods can be used to undermine existing methods so they all must be
   considered within the original threat modeling.
   AI: Michael to rip the doc apart for this
   Goal: A target for bake-off with minimal option choices
   3) the pair of EST over CoAP documents
     * -> expect to merge documents, no major issues.
     * -> is it BRSKI over CoAP, or EST over CoAP, ... "BRSKI over CoAP"
       inherently supports bootstrapping, which ACE cares more.
     * Where would/should this work be done?

   If we look at
   [3]https://tools.ietf.org/html/draft-vanderstok-core-coap-est-00#sectio
   n-3.1
   "   The EST-coaps client MUST be configured with an implicit TA
   database
      or an explicit TA database.  The authentication of the EST-coaps
      server by the EST-coaps client is based on Certificate
   authentication
      in the DTLS handshake."
   This bootstrapping method does not work for a headless device. It
   assumes either:
   1) local configuration of the URI (implicit TA database)
   2) local configuration of the explicit TA database (explicit TA
   database)
   BRSKI is the 3rd approach:
       3) automatic bootstrapping of the TA database
   ACE will need to use (3) therefore will need to do "BRSKI over COAP".
   Need to communicate this back to ACE working group.
   AI: Michael engage on the ACE threads.
   4) use of M_FLOOD
   There is a lack of consensus as to GRASP vs mDNS for discovery of
   proxy, so we suggest that the full ANIMA Proxy MUST do M_FLOOD, (and in
   appendix X?) MUST do mDNS (and MAY do M_FLOOD in appendix).
   Or: Proxy MUST do mDNS and MUST do M_FLOOD.
   A new pledge SHOULD listen to mDNS or M_FLOOD, and MAY listen for both.
   5) getting ownership voucher document into shape (last, because
   I
      think we should get low-hanging fruit out of the way, and this
   will
      overflow into next week
   anyway)
   NEST/Thread discussion looks similar to this area.
   "Bearer Voucher" - the ability to use a bearer token to authenticate a
   voucher.
   [This moved to be bottom down on 2016-12-05]
   2016-11-29:
       present: mcr, max, kent.

       1) ownership-voucher.
       MCR talks about having read about CWT (CBOR version of JWT), and
   also the cose-message format which is used to sign CWT.
       CWT would express the voucher YANG definition directly.


       YANG has been used for a transactional protocol, but not been
   listed for something at REST.
       Kent says it is exactly what would happen if you fetched it with
   GET...

       parking the question: "how do we deal with the encoding"

       2) which working group should take this on.
       It will be ANIMA, and we will create new github group.

       3) bearer token discussion.
       We don't want to standardize a mechanism where a New Node/Pledge
   would directly accept such a voucher.

       [4]https://github.com/anima-wg


   2016-12-06:
       present: mcr, max, kent,toerless

       Discussion about one-touch, vs zero-touch devices.

   REcap last week:
     bearer token discussion: define a bearer token and explicitely
   declare it out of scope.
     * holographic: it is a voucher that is signed but the
       trusted-ca-cert/cacert/ownerid/trustanchr is not filled in. this
       allows anybody with a valid holographic bearer voucher to claim
       ownership.
     * psk voucher: it is a voucher that binds to a psk that the device
       already knows the psk. Also to be declared out of scope.
     * AI: max to write a voucher section for next call

     * security and operational deployment ramifications for each token
       type
     * future proofing


     Shepherd: Role to walk document from working group last call to IESG,
   traditional chairs, but encouraged to include other people (Mcr)

     What shepherding do we need ? Max: coding. security we should be
   fine.

     mcr: Mike Jones (michael.jones@microsoft.com) might be person or
   suggest a person.


     Max: any prototyping plans, interop testing ? what could we do for
   chicago ?

     Mcr: would need to do it at working group level. Saturday hackathon
   ?!

     Mcr sais he will have code by Chicago, Brian will have code.

     Kent: what interop wanted ? more than one version of component ? Mcr:
   yes, would be good.


   2016-12-13:
       present: max, mcr (has to hit washroom, back at 10:05), kent
       THANKS!
     *
       [5]https://ietf.webex.com/ietf/j.php?MTID=m00a039327e09fc0934087299
       2b151581
     *     Meeting number (access code): 644 519 877
     *
     * we had a section on vouchers: burried under imprint.
     * now is in the architecture part earlier in the document.
     * ... what is imprinting... introduces authorization layer.
     *
     * connected to OAuth --- this is a great idea.
     *

      Audit Voucher  Audit Vouchers are obtained by a Registrar from the
         MASA service and presented to the Pledge for validation.  These
         indicate to the Pledge that joining the domain has been logged by
         a logging service.  This mitigates a MiTM Registrar by allowing
         Registrars to examine log material.
             {mcr still has difficulties explaining this to others}
     *         if nonced it is "Trust on First Logged Use" (TOFLU)
     *         if nonceless, then it is a holographic voucher. and it is
       not TOFLU

     * If the "CA cert" is missing it is a bearer voucher.
     * If the device id was missing its a wildcard "master key" works for
       any device and we don't issue these
     * If the vendor checks ownership then this is roughly equivalent to
       an ownership voucher

   1. device attempts to join
   2. registrar obtains audit voucher
   3. registrar examines audit log
   4. registrar presents audit voucher to pledge
   5. pledge validate voucher *and* extracts public key of Registrar from
   the voucher as trust anchor
     pledge(MANU CA) --> verify(audit voucher)  -> 1) public key of owner
      Ownership Voucher  Ownership Vouchers are obtained by a Registrar
         from the MASA service and explicitly indicate the owner of the
         Pledge.  The Ownership Voucher is defined in
         [I-D.ietf-netconf-zerotouch].  This mitigates a MiTM Registrar by
         identifying the specific Registrar authorized to own the Pledge.
            This points to an ownership certificate by DN
            The ownership certificate is a PKI cert issued from the vendor
   to the Registrar
            Add reference/discussion to netconf zerotouch draft

   1. registrar enrolls with vendor to obtain "owner certificate"
      extended in recent netconf: owner certificate can be anchored from
   any CA, but then
      the trust anchor needs to be included in the voucher (if it is
   coming from vendor/MASA,
      then pledge would have trust anchor pre-hardcoded during
   manufacturing).
   2. device attempts to join
   3. registrar obtains ownership voucher which indicates DN of owner
   4. registrar presents ownership voucher to pledge
   5. pledge validates voucher *and* obtains and validates "owner
   certificate"
      pledge(MANU CA) --> verify(ownership voucher)  --> 1) name (DN) of
   owner.
                                                         3) hash of public
   key of owner?
                      --> 2) verify owner certificate (to check it is
   correct DN)  -> public key of owner

     - benefit over public-key: voucher with certificate can lie around
   unused as long as the
       trust anchor (CA cert) is valid - which can be a lot longer than
   the "normal" lifetime
       of a public key pair (which comes eg: a certificate of an owner).
   Eg: 20 years vs. 1 year.
   [6]https://tools.ietf.org/html/draft-kwatsen-anima-voucher-00
      Bearer Voucher  This voucher type is not defined within this
         specification.  Bearer Vouchers are a signed statement from the
         Vendor that any Registrar that possesses the voucher owns the
         Pledge.  Because the Registrar is not identified this voucher
   type
         must be treated as a secret and protected from exposure.
         Theoretically "nonced" and "nonceless" bearer vouches can exist.
         A nonceless bearer voucher effectively turns the Pledge into a
         "TOFU" device with minimal mitigation against MiTM Registrar's
         that have access to the bearer voucher.
      Pre-shared Key Voucher  This voucher type is not defined within this
         specification.  Pre-Shared Key Vouchers are cryptographically
         authenticated using a pre-shared symmetric key known to the
   Pledge
         and the Vendor.  This allows support for devices that can not do
         asymmetric key cryptographic operations.  Although this might
         provide an efficient method for ownership or bearer voucher
         authentication it does not provide the necessary Pledge
         authentication unless the pre-shared key is distributed to the
         Registrar.

   AI: try to build a table for this.
   2016-12-20:
       present: mcr, max, kent.


   Discussed this today:

       2.2.  Secure Imprinting using Vouchers
     A voucher is a cryptographically protected statement to the Pledge
     device indicating authorizing a zero-touch imprint on the Registrar
     domain.  Generically the voucher imparts the following information to
     the Pledge:
     Assertion Basis  Indicates the method that protects the imprint.
        This might include discrete ownership verification, assured
        logging operation or reliance on Pledge endpoint behavior such as
        secure root of trust of measurement.  Only some methods are
        normatively defined in this document.  Other methods are left for
        future work.
     Registrar Authentication  Indicates how the Pledge can authenticate
        the Registrar.  This might include an indication of the PKIX trust
        anchor used by the Registrar, or an indication of shared PKIX
        trust anchor and additional CN-ID or DNS-ID information to
        complete authentication.  Symetric key or other methods are left
        for future work.
     Anti-Replay Protections  Time or nonce based information constrain
        vouchers to time periods or bootstrap attempts.
     A number of boostrapping scenarios can be met using differing
     combinations of this information.  All scenarios address the primary
     threat of a MiTM Registrar gaining control over the Pledge device.
     The primary voucher combinations are referred to within this document
     by name:
                  |Assertion   |Registrar ID    |Pledge ID | Validity    |
                  |Log-|Veri-  |Trust  |CN-ID or|serial    | RTC | Nonce |
                  | ged|  fied |Anchor |DNS-ID  |number    |     |       |

   AI: rename: Registrar ID to "domain ID" and add "role information"
   remove/minimize pledge id (everybody gets one)

     --------------------------------------------------------------------|
     Audit        |  X |       | X     |        | X        |     | X     |
     -------------|----|-------|-------|--------|----------|-----|-------|
     Nonceless    |  X |       | X     |        | X        |     |       |
     Audit        |    |       |       |        |          |     |       |
     -------------|----|-------|-------|--------|----------|-----|-------|
     Owner Audit  |  X |   X   | X     |        | X        |     | X     |

     Owner Role   |  X |   ?   | X     |  X     | X        |     | X     |
     -------------|----|-------|-------|--------|----------|-----|-------|
     Owner ID     |    |   X   | ?     |  X     | X        | X   |       |
     -------------|----|-------|----------------|----------|-------------|
     BearerVoucher|  X |       |   wildcard     | X        | ?           |
     -------------|----|-------|----------------|----------|-------------|
     MasterVoucher|    |       |   wildcard     | wildcard | X   |       |
     -------------|------------|----------------|----------|-----|-------|
   SUGGEST: read the google ct discussion at:
   [7]https://www.certificate-transparency.org/how-ct-works
   this might inform how max is thinking about audit logs and the overlap
   with x509 CN-ID (max's argument is that x509 when done right really
   means checking audit logs anyway so lets go straight to that model and
   avoid the x509 authentication questions. With admission that x509 as a
   model fully exists and therefore is a logical approach many folks are
   comfortable with. thus the "option" we have been building into our
   drafts).
   CN-ID or DNS-ID could be renamed "RFC6125"?
   Kent NOTEs: signing mechanisms needs to be able to pass a chain of
   certificates. this is a key characteristic.
   2017-1-3
     * present: max, mcr, kent
     *
     * Voucher document will list the different attributes of the voucher,
       and explain how to process each of the attributes. Some of the
       combinations will be named.
     * The BRSKI document will explain when to use each named vouch
       combination.
     *
     * from CWT:
     *
     *    3.1.  Claim Names . . . . . . . . . . . . . . . . . . . . . .
       .   4
     *        3.1.1.  iss (Issuer) Claim  . . . . . . . . . . . . . . . .
       .   4
     *        3.1.2.  sub (Subject) Claim . . . . . . . . . . . . . . . .
       .   4
     *        3.1.3.  aud (Audience) Claim  . . . . . . . . . . . . . . .
       .   4
     *        3.1.4.  exp (Expiration Time) Claim . . . . . . . . . . . .
       .   5
     *        3.1.5.  nbf (Not Before) Claim  . . . . . . . . . . . . . .
       .   5
     *        3.1.6.  iat (Issued At) Claim . . . . . . . . . . . . . . .
       .   5
     *        3.1.7.  cti (CWT ID) Claim  . . . . . . . . . . . . . . . .
       .   5
     *
     *
     * [8]https://datatracker.ietf.org/wg/cose/documents/
     *
     * AI: mcr to put together normative text on using CWT for Voucher
       use.
     *
     * "4" is a blog (gets a signature)  (voucher)
     * "5" is a blog (gets a signature)  (revocation list)
     * what are the fields and how to process them.
     * what are the signatures and how/when to create them:
     * ... new section 6, signing strategy, also about revocation
       strategy.
     *
     * first prong: review of table of contents... what's missing is an
       overview and introduction.... tree diagram is presented is as part
       of the overview.
     * section 4.1: before diagram... field called "assertion" --- if it
       is logged, this is what it means.  then field "trusted CA".
     *

   2017-1-10
     * present: max, mcr, kent, toerless

   AI: max to add terminology section to voucher doc
       pledge - we're good on this
       owner domain - for owner's domain. where registrar
       MASA - for "manufacturer or delegate". Then in the BRSKI doc *name*
   the REST interface to the MASA.
   AI: update voucher ToC as such:
   ToC to be:
   Intro
    terminology
    requirements
    tree diagram notation
    secure imprinting using voucher

   voucher
    tree diagram
    examples, etc

   AI: kent to add normative reference to yang->json RFC as the encoding
   type.

   2017-1-17
     * present: max, kent, mcr, toerless

   Anima terminology change for consistency with 6tisch:
      Anima "Proxy" to be "Join Proxy"
     * Registrar to be "Join Registrar and Coordinating" (JRC) with
       intro/terminology indicating use of abbrviated terms in the body.
       Q: what does 'coordinator' imply? That it "makes sure doesn't
       accept
     * too many join processes at the same time" and "drives them" to
       manage bandwidth.

      Join Registrar  or maybe Join Registrar (and Coordinator).

   DONE. AI: mcr will write email summarizing change of terminology.
   3.1.1.  Discovery
      The result of discovery is a logical communication with a Registrar,
      through a Proxy.  The Proxy is transparent to the Pledge but is
      always assumed to exist.
      To discover the Registrar the Pledge performs the following actions:
      a.  MUST: Obtains a local address using IPv6 methods as described in
          [RFC4862] IPv6 Stateless Address AutoConfiguration.  [RFC7217]
   is
          encouraged, but see Section 9.  IPv4 methods are described in
          Appendix A
      b.  MUST: Listen for GRASP M_FLOOD ([I-D.ietf-anima-grasp])
          announcements of the objective: "ACP+Proxy".  See section
          Section 5 for the details of the the objective.  The Pledge may
          listen concurrently for other sources of information, see
          Appendix B.
      Once a proxy is discovered the Pledge communicates with a Registrar
      through the proxy using the bootstrapping protocol defined in
      Section 7.
      Each discovery method attempted SHOULD exponentially back-off
      attempts (to a maximum of one hour) to avoid overloading the network
      infrastructure with discovery.  The back-off timer for each method
      MUST be independent of other methods.  Methods SHOULD be run in
   Discussion: Need more statements about liars claiming devices. Current
   discussion is in security considerations but needs more. In particular
   discussion about Proof-of-possession. A suggestion is that having
   devices avoid leaking their serial# widely can help prevent a "lazy"
   attack where the attacker doesn't know/guess the serial number in
   advance. The underlying problem and solution should be discussed
   independent of the discovery mechanism... but there is an overlap
     *
     *

   AI: The M_FLOOD vs mDNS initial discovery discussion is not over, and
   we should invite the DNSSD/mDNS folks to come and make the case.
   Guys, I need to go now - Kent
   AI: security considerations of parallel vs sequential connection.
   Toerless:
       (R)ight: L2 discovery protocol requirement:
           proxy needs to periodically (unsolicited) announce its proxy
   service via L2 multicast/broadcast
           pledge only accepts reply if it was multicast/broadcast
           pledge should then try to register via such discovered proxies.
               if multiple proxies discovered, parallel and/or sequential
   -> more difficult discussion
       (W)rong: The opposite is NOT a good solution:
           pledge sends out L2 multicast/broadcast queries for proxy
           proxy sends unicast reply to pledge
           pledge then tries to register via such discovered proxies.
       Reason:
           Whether we do (R)right or (W)rong, the pledge has no good way
   to protect itself against such an L2
           attacker. Attacker may be able to look like many proxies,
   resulting in DoS attack against pledge.
           If we do (R)ight, then a third-party (eg: valid proxy) on the
   same L2 domain can much easier
           discover the attacker - because attacker MUST
   broadcast/multicast itself.
       Example:
           Ethernet LAN. Valid proxy is router, attacker is host with
   malware acting as proxy. In (R)ight,
           Valid proxy would immediately see attacker due to its
   multicasts. In (W)rong, the only way to
           discover attacker by third-party is to have a
   discovery-unicast-reply message spoofing function
           in the L2 switch of the LAN - much more complex requirement.
       Notes:
           The security of (R)ight depends on pledge being able to see if
   received packet from proxy was L2
           unicast or multicasted. This information is typically ignored
   in existing network protocol stacks
           and is also typically unavailable on the socket-API. This IMHO
   makes it highly beneficial to
           use a very lightweight protocol (like the subset of GRASP
   dedicate to this) that can specifically
           be implemented to do this security check.

           Example/Proof: WiFi
           WiFi client joining to a multicast group to receive traffic.
   APs with proprietary
           multicast->unicast feature (eg: Cisco Videostream, but every
   business AP vendor has this now)
           send out to every joined client the L3 multicast stream as L2
   unicast so that the WiFi L2
           retransmission of WiFi can be used (no L2 multicast
   retransmissions defined in 802.11 so far).
           This trick relies on on the fact that the L3 multicast stack
   and socket API on hosts completely
           ignores the MAC address layer of multicast packets.

           Note too that L2 technologies (Ethernet/WiFi) often make it
   easy to fake the L2 source address,
           therefore allowing attackers to masquerae as many proxies. BUT:
   these technologies make it
           hard or impossible to fake a multicast packet. In Ethernet this
   is impossible. Not sure how
           difficult/easy it is in WiFi for HW to fake a multicast packet
   wrt. to the multicast
           indication in the packet header.

           Wrt to mDNS (RFC6762):
           1. There is no text to discuss that L2 unicast messages must be
   ignored for L3 mDNS messages
              that are meant to be multicast.
           2. There is explicit text prohibiting periodic unsolicited
   announcements:
              A Multicast DNS responder MUST NOT send announcements in the
   absence
              of information that its network connectivity may have
   changed in some
              relevant way.  In particular, a Multicast DNS responder MUST
   NOT send
              regular periodic announcements as a matter of course.


   2017-01-24:
   present: max, kent, mcr
   AI: The M_FLOOD vs mDNS initial discovery discussion is not over, and
   we should invite the DNSSD/mDNS folks to come and make the case.
   AI: security considerations of parallel vs sequential connection.
   Kent: There was an issue in NETCONF how hot to use YANG to document
   artifacts (file formats, etc.).  This is a syntactic enhancement to the
   YANG definition.
   Agenda:
       1)
   AI: Movingn BRSKI stuff to voucher doc continued
     * Voucher doc -> gains the high level arch diagram and Pledge,
       "inventory tracking" Registrar, and MASA definitions
     * BRSKI doc -> references this and expands "Join Registrar" to be a
       specific BRSKI server
     * netconf -> references voucher and expands "[foo] Registrar" to be a
       [manual process or other]
     *
     *
     * Kent would like Registrar to be a conceptual entity that passes the
       Voucher from MASA to Pledge.
     *
     *
     * 2) proxy section.  Normative reference for IPIP
     * 3) How to do CoAP (over PEAP? TEAP? EAP-TLS? EAP-TTLS?, over
       802.1X.). Remove 3.2.1 CoAP, and leave it for another document.
     * AI: mcr to revise, simplify and augment this section to make it
       obvious that it should be extended.
     *

   Feb.13: goal to have all three documents.
   Juniper vs Cisco PKCS7 voucher creation/interop in Chicago.
   Will use PKCS7 with RSA signatures initially.
     *

   2017-01-31:
     *     present: mcr, kent, max
     *
     * discussion about OSCP vs CRLs.
     * Question about PKCS7 vs CWT etc. for encoding of the voucher.
     * The registrar needs to be aware of the contents of the voucher for
       reasons of auditing, otherwise the format of the voucher *COULD* be
       private between the MASA and the pledge.
     *
     * Discussion about option by which JRC can decide to pass unknown
       formats for the voucher through to the pledge, should it wish to
       forgo auditing.
     *
     *

   1. PK7 escapsulated ( json-payload, signature, + [CRLs or Certs] )
              format signalled by outside content-type (JSON encoded YANG
   data, for instance), for instance.
              "The Audit Voucher response is encapsulated in a [RFC5652]
   Signed-data that is signed by the MASA server." "with a content-type of
   application/authorizationvoucher" -04 section 5.3
   2. CWT-encapsulated ( EdDSA-signed-CBOR object ) + (??-unknown
   revocation)
     *
     * register requests voucher from MASA, and contains a version field
       -04 section 5.1
     * the registrar caches the audit voucher response:
       application/authorization-voucher, or
       application/authorization-voucher-2,
       application/authorization-voucher-jwt -04 section 5.3
     * Registrar is NOT REQUIRED to parse this object, but it SHOULD do so
       if it needs to AUDIT.

   On a USB key, the filename extension substitutes for the HTTP 200
   content-type; as is usual in the industry
   filename examples:
     - voucher.pk7  // suffix signals #1
     - voucher.cwt  // suffix signals #2

     AI: write IANA Considerations section registering
   application/authorization-voucher.

   Follow the format of RFC7030 section5 IANA template in final draft
   which becomes section5 of RFC7030
   [9]https://tools.ietf.org/html/rfc7030#section-5
   for example:
      The media subtype for CSR attributes in a CSR Attributes Response is
      application/csrattrs.
   we will end up with a similar statement about
   application/authorizationvoucher
   2017-02-07
       present: kent, max, mcr, toerless

       Is the WebEX server down?

       Other webex servers seem up and the main www.webex.com site is up.
   My hardware VPN is down though so I don't have access to any internal
   reports at the moment. We can webex here as an alternative:
       [10]https://cisco.webex.com/join/pritikin

        okay.


       Agenda:  1) content-types
       Using these section headers:
   [11]https://tools.ietf.org/html/draft-ietf-anima-bootstrapping-keyinfra
   -04

       s5
       These extensions MUST
      be supported by the Registrar EST server within the same .well-known
      URI tree as the existing EST URIs as described in [RFC7030] section
      3.2.2.

       s.5.1 request voucher from registrar POST
            /brski/rv

     *     application/requestvoucher  or application/json  or
       application/<object>+<encoding> [passing 'object' important only if
       can vary]

       s.5.2 request voucher from MASA

       s.5.3 audit voucher response

     * application/voucher+pk7   <----- we will consistently go with this
       style for each section

   AI: kent to where the +pk7 stuff is defined
       s.5.7.4 Enrollment Status Telemetry

     * /est/status    <- advantage of shorter. advantage clearly an est
       status message (would require this RRC *updates* 7030)
     * /brski/status  <- advantage that this is clearly a brski defined
       message

   Link to iana page for he media types above. try to re-use:
   [12]https://www.iana.org/assignments/media-types/media-types.xml
   (searching for "pk" produces interesting results!)
   RFC6838: Media Type Specifications and Registration Procedures
        restricted-name-chars =/ "+" ; Characters after last plus always
                                     ; specify a structured syntax suffix


   [13]https://tools.ietf.org/html/draft-ietf-netconf-restconf-12#section-
   3.1
       Minimizing the re-direction would minimize the round trips.

       I prefere /.well-known/est/TLA or /.well-known/brski/TLA
       why TLA and not a more human readable? CoAP.  But I don't think
   it's that important.
       [14]https://tools.ietf.org/html/rfc5785
       action item: max to update text consistent with this.

       2) interop plans -- details.


       Interop/Hackathon
   ([15]https://www.ietf.org/hackathon/98-hackathon.html)
       =================
       AI: to request space durint hackathon. probably 3-4 peoples.
       AI: write emails to list about plans.


   2017-02-14 (happy hallmark day!):
       present: mcr,max, kent
   from the 6tisch-security meeting, some diagrams:
      [16]http://www.sandelman.ca/SSW/ietf/6tisch/  see
   pledge-join-states_EB.svg (or .png)

          ** If one permits redirects, and there is a MITM, the MITM can
   force the pledge to follow the redirects. Including, "wait a bit and
   retry" (HTTP message... xxx) may be able to replay the redirect.**
    [17]https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-Af
   ter  <-- explains 503/301 Retry-After
   AI max: look to see if there is something better than 503 for human
   introduced delay. The "The server also MAY include informative
   human-readable content" statement from RFC7030 might provide this
   information but at the cost of a large number of bytes.
   Indicate a maximum amount of time before retry. Perhaps expressed as a
   f(delay before trying other registrars).
   Explain the human involvement on the Registrar piece
   2017-02-21:
     *     present: max, mcr, kent, toerless
     *
     * max: 503 delay not yet committed.
     * max: question about proxy discussion.
     * kent: did not get to update voucher draft.
     *
     * 1) proxy discussion
     * 2) voucher draft, identifying the ownership certificate via it's
       subject matter, CN/DNS/etc.  (sub key id, auth key id)
     * 3) interop testing discussion.
     * 4) defense against attacker looking like many Join Proxy
     *
     * Proxy discussion

   Current text IPIP forwarding mechanism.
   current writeup does not articulate it well enough, 3.2.1 CoAP. Dropped
   CoAP discussion.
   Let's drop CoAP discussion completely for now.
   We could drop CoAP, but talk about TCP and UDP instead.
   Implementers do not know what to implement: needs to say more.
   TCP circuit proxy or IPIP encapsulation of TCP packet.
   ACTION ITEM: mcr update the text to say that registrar / JP need to
   decide upon a mechanism.
   ACTION ITEM: mcr need to write up IPIP forwarding better.
   ACTION ITEM: mcr to update 3.2.2, and remove 3.2.1 for now.
   Because this is between the Proxy and Registrar there is no change in
   behavior by the Pledge.
   There can be options; they would be negotiated by the this:
   6.  Registrar Discovery Protocol Details
      The registrar responds to discovery messages from the proxy (or
   GRASP
      caches between them) as follows:
      objective         = ["AN_registrar", F_DISC, 255 ]
      discovery-message = [M_DISCOVERY, session-id, initiator, objective]
      Figure 6: Registrar Discovery
      The response from the registrar (or cache) will be a M_RESPONSE with
      the following parameters:
      response-message = [M_RESPONSE, session-id, initiator, ttl,
                         (+locator-option // divert-option), ?objective)]
      initiator = ACP address of Registrar
      locator1  = [O_IPv6_LOCATOR, fe80::1234, 6,  443]
      locator2  = [O_IPv6_LOCATOR, fe80::1234, 17, 5683]
      locator3  = [O_IPv6_LOCATOR, fe80::1234, 41, nil]
   Does this mean:
     *     response-message = [?, session-id, initiator, ttl, locator1 +
       locator2 + locator3, objective="AN_registrar"]

      Figure 7: Registrar Response
   "  The GRASP protocol treats the objective name as an opaque string.
      For example, "EX1", "411:EX1", "example.com:EX1", "example.org:EX1
      and "user@example.org:EX1" would be five different objectives."
   ACTION: expand text of section 6 to explain how these three responses
   map to specific Join Proxy behaviour.
   {6/xxx   = TCP circuit proxy to port xxx, HTTPS EST,
    17/yyyy = CoAP circuit proxy to port yyyy,
    41/0    = IPIP encapsulation
    }
   so, maybe the ?objective should involved here too!!!
   Decision for section 3:
     * Implement circuit proxy on proxy. No change to Pledge. Easy
       implemnetation on Registrar (no change from current test cases).
     * For scalability / future proofing we indicate here that future
       proxy models may/will/even-now exist. Section 7 will be updated to
       indicate how they are signaled because this forces grasp/ACP to
       improve.
     *

   AI: Michael to update section3 of the doc to reflect.
   2) voucher document.
     * Anchor is "Versign's CN=FOO" or "Verisign's dnsName=FOO", but would
       like to use entire subjectAltName.
     * subject = X509 DN (abstracted from key itself)
     * subjectKey = actual public key
     * subjectKeyIdentifier = hash of public key.

   section 4.2.1.2 of rfc5280.
   this lacks the level of indirection desired.
   this field rfc6125 validation
   Kent AIs:
     - add subject-hash details
     - add indirect issuer details
     - look into v3 extension option
   2017-02-28:
       lousy no good two bit no show: max pritikin
       present: everybody else

       Folks, i'm sorry for the late notice but i'm not going to be able
   to join this week. I haven't much to report on the document front.
       I hope to send some example/test protocol messages via email later
   in the week.
       I also dropped you all an email.

   2017-02-28: (11am)
       present: kent, mcr, toerless,

   1) interop planning. 20minutes max.
     * Kent: standalone test environment, openssl/Makefile/C-code to do
       some things that CLI won't use.

     * Goes through entire gamit and creating voucher and revocation and
       anchor/intermediates.
     * Not really interop... convert from PKCS7 to other format.
     * The voucher was written in JSON per draft.
     *

         MCR:  wanted to have, COSE signed CWT format voucher.
               Totally non-interoperable with above. Not aligned with
   current draft.
               mcr agrees to work towards PKCS7 signed items....

     *

   2) getting the -05 out the door (20 minutes max)
   3) I was asked to write about IPIP encapsulation.

   [18]https://github.com/anima-wg/anima-bootstrap/commit/bba6351458955862
   965c71199b2f8a94f90cf169
      There are some provisioning issues that came up.  I tried to capture
   some
   of the updates in:

   [19]https://github.com/anima-wg/anima-bootstrap/commit/e049ec790a7051d5
   4094bfca9d8921e59d7458e5

   RFC7519 - JWT - is that a good format for voucher content ?
   CWT -> michael would like that for 6TSCH.
   JWT Libraries could already interpret JWT objects.
      - JWT library should be able to give us:
           - Encode/decode of voucher object
           - create/verify signature
           - validating the claim - checking whether claim applies to
   situation
               - eg: in voucher check that voucher is for the pledge
                 (eg: if we refer to pledge via DN, serial number,
   certificate-hash,...)
                 these options will likely still need to be
   defined/implemented on top of JWT library. probavbly not predefined
           - validating that claim is current (if JWT contains timestamps)
             JWT has some time we don't need, but may need to add our own
   notion of time (Michael).
           - .. other aspects..
   [20]https://stackoverflow.com/questions/39909419/jwt-vs-oauth-authentic
   ation

   [21]JavaScript license information

References

   1. https://trac.tools.ietf.org/wg/anima/trac/wiki/Bootstrap
   2. https://tools.ietf.org/html/draft-ietf-anima-bootstrapping-keyinfra-04
   3. https://tools.ietf.org/html/draft-vanderstok-core-coap-est-00#section-3.1
   4. https://github.com/anima-wg
   5. https://ietf.webex.com/ietf/j.php?MTID=m00a039327e09fc09340872992b151581
   6. https://tools.ietf.org/html/draft-kwatsen-anima-voucher-00
   7. https://www.certificate-transparency.org/how-ct-works
   8. https://datatracker.ietf.org/wg/cose/documents/
   9. https://tools.ietf.org/html/rfc7030#section-5
  10. https://cisco.webex.com/join/pritikin
  11. https://tools.ietf.org/html/draft-ietf-anima-bootstrapping-keyinfra-04
  12. https://www.iana.org/assignments/media-types/media-types.xml
  13. https://tools.ietf.org/html/draft-ietf-netconf-restconf-12#section-3.1
  14. https://tools.ietf.org/html/rfc5785
  15. https://www.ietf.org/hackathon/98-hackathon.html)
  16. http://www.sandelman.ca/SSW/ietf/6tisch/
  17. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After
  18. https://github.com/anima-wg/anima-bootstrap/commit/bba6351458955862965c71199b2f8a94f90cf169
  19. https://github.com/anima-wg/anima-bootstrap/commit/e049ec790a7051d54094bfca9d8921e59d7458e5
  20. https://stackoverflow.com/questions/39909419/jwt-vs-oauth-authentication
  21. file:///javascript
